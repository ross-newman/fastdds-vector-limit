CPP= g++
CPPFLAGS = -c -Wall -fpic -m64 -O2 -std=c++0x
LN= g++
AR=ar
LDFLAGS= -m64
SYSLIBS= -ldl -lnsl -lm -lpthread -lrt
DEFINES= 

INCLUDES= -I. 

LIBS =  -lfastcdr -lfastrtps $(shell test -x "$$(which pkg-config)" && pkg-config libssl libcrypto --libs --silence-errors) $(SYSLIBS)

DIRECTORIES= output.dir output/x64Linux2.6gcc.dir lib.dir lib/x64Linux2.6gcc.dir bin.dir bin/x64Linux2.6gcc.dir

all: $(DIRECTORIES) test testPublisherSubscriber


test_TARGET= lib/x64Linux2.6gcc/libtest.so
test_TARGET_Z= lib/x64Linux2.6gcc/libtest.a

test_CLIENT_EXAMPLE_TARGET= bin/x64Linux2.6gcc/testPublisherSubscriber
test_COMMON_SRC_CXXFILES = test.cxx

test_COMMON_SRC_CPPFILES=

test_CLIENTSOURCES = testPubSubTypes.cxx \
	testPublisher.cxx \
	testSubscriber.cxx \
	testPubSubMain.cxx

test_COMMONOBJS    = $(test_COMMON_SRC_CXXFILES:%.cxx=output/x64Linux2.6gcc/%.o) $(test_COMMON_SRC_CPPFILES:%.cpp=output/x64Linux2.6gcc/%.o)

test_CLIENTOBJS    = $(test_CLIENTSOURCES:%.cxx=output/x64Linux2.6gcc/%.o)

testOBJS+= $(test_COMMONOBJS) $(test_CLIENTOBJS)
OBJS+= $(testOBJS)

$(test_TARGET): $(test_COMMONOBJS)
	$(LN) $(LDFLAGS) -shared -o $(test_TARGET) $(test_COMMONOBJS) $(LIBS) -Llib/x64Linux2.6gcc 

$(test_TARGET_Z): $(test_COMMONOBJS)
	$(AR) -cru $(test_TARGET_Z) $(test_COMMONOBJS)

$(test_CLIENT_EXAMPLE_TARGET): $(testOBJS) lib/x64Linux2.6gcc/libtest.a 
	$(LN) $(LDFLAGS) -o $@ $(testOBJS) -Wl,-Bstatic -Llib/x64Linux2.6gcc -ltest  -Wl,-Bdynamic $(LIBS)

testPublisherSubscriber : $(test_CLIENT_EXAMPLE_TARGET)
test: $(test_TARGET) $(test_TARGET_Z) testPublisherSubscriber

output/x64Linux2.6gcc/%.o:%.cxx
	$(CPP) $(CPPFLAGS) $(INCLUDES) $(DEFINES) -c $< -o $@

output/x64Linux2.6gcc/%.o:%.cpp
	$(CPP) $(CPPFLAGS) $(INCLUDES) $(DEFINES) -c $< -o $@

.PHONY: test testPublisherSubscriber

clean:
	@rm -f $(OBJS)

%.dir : 
	@echo "Checking directory $*"
	@if [ ! -d $* ]; then \
		echo "Making directory $*"; \
		mkdir -p $* ; \
	fi;
